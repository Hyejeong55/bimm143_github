---
title: "Class 10: Structural Bioinformatics (Pt 1)"
author: "Hyejeong Choi (PID: A16837133)"
format: pdf
toc: TRUE
---

## 1. The PDB Database 

The main repository of biomolecular structure data is called the [Protein Data Bank](https://www.rcsb.org/) (PDB for short). It is the second oldest database (after Genbank).

What is currently in the PDB? We can access the current composition stats [here](https://www.rcsb.org/stats/)

```{r}
stats <- read.csv("Data Export Summary.csv", row.names=1)
stats
```

> Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.

```{r}
# Substitute commas for nothing then convert to numeric

y <- as.numeric(gsub(",", "", stats$X.ray))
sum(y)
```

Turn this snippet into a function so I can use it any time I have this comma problem (i.e. the other columns of this `stats` table)

```{r}
comma.rm <- function(x) {
  remove_comma <- gsub(",", "", x)
  convert_numeric <- as.numeric(remove_comma)
  return(sum(convert_numeric))
}
```

```{r}
x.ray_sum <- comma.rm(stats$X.ray)
em_sum <- comma.rm(stats$EM)
total.sum <- comma.rm(stats$Total)
```

Percentage of structures solved by X-ray

```{r}
(x.ray_sum/total.sum)*100
```

Percentage of structures solved by EM

```{r}
(em_sum/total.sum)*100
```

> Q2: What proportion of structures in the PDB are protein?

```{r}
protein_total <- comma.rm(stats["Protein (only)","Total"])
(protein_total/total.sum)*100
```

> Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?

1,149 structures of HIV-1 protease.

## 2. Visualizing with Mol-star

Explore the HIV-1 protease structure with PDB code: `1HSG`
Mol-star homepage at: https://molstar.org/viewer/

> Q4: Water molecules normally have 3 atoms. Why do we see just one atom per water molecule in this structure?

Because the resolution of the camera is higher than the size of the hydrogen atoms, so the hydrogen atoms will not appear.

![Figure 1. A first view of HIV-Pr](1HSG.png)

![Figure 2. Molecular surface showing binding cavity](1HSG_2.png)

> Q5: There is a critical “conserved” water molecule in the binding site. Can you identify this water molecule? What residue number does this water molecule have

![Figure 3. Water molecule found inside of the cavity](1HSG_water.png)

The water molecule has residue number 308.

> Q6: Generate and save a figure clearly showing the two distinct chains of HIV-protease along with the ligand. You might also consider showing the catalytic residues ASP 25 in each chain and the critical water (we recommend “Ball & Stick” for these side-chains). Add this figure to your Quarto document.

![Figure 4. The catalytically important ASP25 amino acids and drug interacting HOH 308 water molecule](1HSG_ASP25.png)

## 3. Using the bio3D package in R

The Bio3D package is focused on structural bioinformatics analysis and allows us to read and analyze PDB (and related) data.

```{r}
library(bio3d)
```

```{r}
pdb <- read.pdb("1hsg")
pdb
```

```{r}
attributes(pdb)
```

> Q7: How many amino acid residues are there in this pdb object? 

198

> Q8: Name one of the two non-protein residues? 

HOH 127 and MK1

> Q9: How many protein chains are in this structure? 

2 chains

We can see atom data with `pdb$atom`:

```{r}
head(pdb$atom)
```

```{r}
head(pdbseq(pdb))
```

## Molecular Visualization in R

We can make a quick 3D viz with the `view.pdb()`


```{r}
library(bio3dview)
library(NGLVieweR)

# view.pdb(pdb, backgroundColor = "pink", colorScheme = "sse")
```

```{r}
sel <- atom.select(pdb, resno=25)

# view.pdb(pdb, cols=c("green", "orange"),
         # highlight=sel,
         # highlight.style="spacefill") |>
  # setRock()
```


## Predicting functional motions of a single structure

We can finish off today with a bioinformatics prediction of the functional motions of a protein.

We will run a Normal Mode Analysis (NMA)

```{r}
adk <- read.pdb("6s36")
adk
```

```{r}
m <- nma(adk)
plot(m)
```

```{r}
# view.nma(m)
```

We can write out a trajectory of the predicted dynamics and view this in Mol-star

```{r}
mktrj(m, file="nma.pdb")
```

```{r}
# view.nma(m, pdb=adk)
```




